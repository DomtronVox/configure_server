*filter
:INPUT DROP [1:72]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
-N 3FX_LOGDROP
-N 3FX_BLOCKED_IPS
:Combined - [0:0]

# First off, blockable IPs
--append 3FX_LOGDROP --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP "
--append 3FX_LOGDROP --jump DROP
# JUMP: this will return and continue processing rules (apart from a DROP). GOTO would NOT continue after finishing the jump.
# Tell input chain to test against our list of blocked IPs before allowing anything.
--append INPUT --jump 3FX_BLOCKED_IPS
# 3FX_BLOCKED_IPS has a series of rules for blocking specific IPs and subnets.
# It is automatically generated, for the most part.

# Rules to execute before FWSNORT
# FTP fixes
--append INPUT --protocol tcp --dport 20 --jump ACCEPT
--append INPUT --protocol tcp --dport 21 --jump ACCEPT
--append INPUT --protocol tcp --dport 49152:65535 --jump ACCEPT

# ICMP: Allow most ICMP packets to be received (so people can check our presence), but restrict the flow to avoid ping flood attacks
--append INPUT --protocol icmp --match icmp --icmp-type address-mask-request --jump DROP
--append INPUT --protocol icmp --match icmp --icmp-type timestamp-request --jump DROP
--append INPUT --protocol icmp --match limit --limit 1/second --jump ACCEPT
# just drop the "extra" ICMP packets without logging; not worth it to log excessive ICMP
# could change if we hit DoS problems
--append INPUT --protocol icmp --jump DROP

#### INSERT FWSNORT_INPUT HERE ####

# Catch spoofing from "weird" addresses
--append INPUT ! --in-interface lo --source 172.16.0.0/12 --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP SUSPECT: LO SPOOF A: "
--append INPUT ! --in-interface lo --source 192.168.0.0/16 --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP SUSPECT: LO SPOOF B: "
--append INPUT ! --in-interface lo --source 192.168.0.0/16 --jump DROP
--append INPUT ! --in-interface lo --source 224.0.0.0/4 --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP SUSPECT: LO MULTICAST C: "
--append INPUT ! --in-interface lo --source 224.0.0.0/4 --jump DROP
--append INPUT ! --in-interface lo --source 240.0.0.0/5 --jump LOG --log-prefix "IPTABLES DROP SUSPECT: LO SPOOF D: "
--append INPUT ! --in-interface lo --source 240.0.0.0/5 --jump DROP
--append INPUT ! --in-interface lo --destination 127.0.0.0/8 --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP SUSPECT: LO LOOPBACK: "
--append INPUT ! --in-interface lo --destination 127.0.0.0/8 --jump DROP
## # You should change ethX to the interface for your local network.
## # IMPORTANT: disable/comment these lines if you have a local network. On Amazon EC2 we don't, but VPC would be a different matter!
## --append INPUT ! --in-interface ethX --source 10.0.0.0/8 --match limit --limit 1/second --jump LOG --log-prefix "IP DROP LAN SPOOF E: "
## --append INPUT ! --in-interface ethX --source 10.0.0.0/8 --jump DROP

# Do not allow fowarding, so we drop packets not destined for our IP
# Sensitive; take care when we test this one. Still not made up if it's good or not
# --append INPUT ! --in-interface lo ! --source <REPLACE_WITH_LOCAL_IP> --jump LOG --log-prefix "FORWARDED: "

# Invalid junk-packets
--append INPUT --match state --state INVALID --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP SUSPECT: INVALID " --log-ip-options --log-tcp-options
--append INPUT --match state --state INVALID --jump DROP

# Accept existing lines of traffic (so we can receive responses to outgoing traffic)
--append INPUT --match state --state RELATED,ESTABLISHED --jump ACCEPT

# Accept traffic from localhost interface and local VLAN.
--append INPUT --in-interface lo --jump ACCEPT

# Accept:
#
# ICMP: Allow most ICMP packets to be received (so people can check our presence), but restrict the flow to avoid ping flood attacks
--append INPUT --protocol icmp --match icmp --icmp-type address-mask-request --jump 3FX_LOGDROP
--append INPUT --protocol icmp --match icmp --icmp-type timestamp-request --jump 3FX_LOGDROP
--append INPUT --protocol icmp --match limit --limit 1/second --jump ACCEPT
# just drop the "extra" ICMP packets without logging; not worth it to log excessive ICMP
--append INPUT --protocol icmp --jump DROP
#
# TCP
# - FTP
#   (moved above)
# --append INPUT --protocol tcp --dport 20 --jump ACCEPT
# --append INPUT --protocol tcp --dport 21 --jump ACCEPT
# - SSH
--append INPUT --protocol tcp --dport 22 --jump ACCEPT
# - HTTP
--append INPUT --protocol tcp --dport 80 --jump ACCEPT
--append INPUT --protocol tcp --dport 8080 --jump ACCEPT
# - HTTPS
--append INPUT --protocol tcp --dport 443 --jump ACCEPT
# - nrpe: only accept from nagios server. Enable when we launch nagios. (Nagios remote plugin executor)
# --append INPUT --protocol tcp --dport 5666 --source <INSERT_NAGIOS_IP> --jump ACCEPT
#
# More stuff necessary for FTP.
#
# Active FTP Connections are covered by rules above

# Allow Passive FTP Connections in IANA ephemeral port space
#   (moved)
# --append INPUT --protocol tcp --dport 49152:65535 --jump ACCEPT

# OUTPUT RULES
#
# Summary: we accept most output, but we do log invalid packets as that's a pretty bad sign.
#
# Invalid junk
--append OUTPUT ! --destination 127.0.0.1 --match state --state INVALID --match limit --limit 1/second --jump LOG --log-prefix "IPTABLES DROP SUSPECT: OUT: INVALID " --log-ip-options --log-tcp-options
--append OUTPUT ! --destination 127.0.0.1 --match state --state INVALID --jump DROP
#### INSERT FWSNORT_OUTPUT HERE ####
# Accept all other outgoing stuff. (May need to revise this.)
--append OUTPUT --jump ACCEPT
# Forward rules -- currently N/A
#### INSERT FWSNORT_FORWARD HERE ####
COMMIT
# Modified / tested on Monday March 10 23:48 2014
